apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "usage.labels" . | nindent 4 }}
  name: trendmicro-usage-controller
  namespace: {{ .Release.Namespace }}
spec:
  replicas:  {{ default 1 .Values.replicas.usage }}
  selector:
    matchLabels:
      {{- include "usage.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/auth: {{ include "container.security.auth.secret" . | sha256sum }}
        checksum/cert: {{ include (print $.Template.BasePath "/kube-rbac-proxy-cert.yaml") . | sha256sum }}
{{- with (default .Values.podAnnotations.defaults .Values.podAnnotations.usage) }}
{{- toYaml . | nindent 8 }}
{{- end }}
      labels:
        {{- include "usage.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "usage.serviceAccountName" . }}
{{- $securityContextEnabled := .Values.securityContext.enabled }}
{{- $securityContext := default .Values.securityContext.default .Values.securityContext.usage }}
{{- $podSecurityContext := default .Values.securityContext.default.pod $securityContext.pod }}
{{- $containerSecurityContext := default .Values.securityContext.default.container $securityContext.container.usage }}
{{- if $securityContextEnabled }}
      securityContext:
{{ toYaml $podSecurityContext | indent 8 }}
{{- end }}
      {{- $imageDefaults := .Values.images.defaults }}
      {{- with .Values.images.usage }}
      {{- $secret := (default (default "" $imageDefaults.imagePullSecret) .imagePullSecret) }}
      {{- if not (eq "" $secret) }}
      imagePullSecrets:
        - name: {{ $secret | quote }}
      {{- end }}
      containers:
      - name: controller-manager
{{- if $securityContextEnabled }}
        securityContext:
{{ toYaml $containerSecurityContext | indent 12 }}
{{- end }}
        {{- $project := (default (default "trendmicrocloudone" $imageDefaults.project) .project) }}
        {{- $repository := printf "%s/%s" $project (required ".repository is required!" .repository) }}
        {{- $tag := (default $imageDefaults.tag .tag) }}
        image: {{ include "image.source" (dict "repository" $repository "registry" .registry "tag" $tag "imageDefaults" $imageDefaults "digest" .digest) }}
        imagePullPolicy: {{ default (default "Always" $imageDefaults.pullPolicy) .pullPolicy }}
        {{- end }}
        args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --exclude-kubernetes-service-host-from-proxy={{ default "false" .Values.proxy.excludeKubernetesServiceHost }}
        {{- if gt (int .Values.replicas.usage) 1 }}
        - --leader-elect
        {{- end }}
        - --cloud-one-endpoint={{ include "container.security.endpoint" . }}
        - --application-version={{ .Chart.AppVersion }}
        command:
        - /manager
        env:
        {{- include "container.security.proxy.env" . | nindent 8 }}
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
          - mountPath: /secrets
            name: api-key
          {{- include "proxy.selfSignedCertificates.volumeMounts" . | nindent 10 }}
        resources:
{{ toYaml (default .Values.resources.defaults .Values.resources.usage) | indent 12 }}
      - {{ include "rbacProxy" (dict "securityContext" .Values.securityContext "images" .Values.images "resources" .Values.resources "customSecurityContext" .Values.securityContext.usage "tlsConfig" .Values.tlsConfig ) | nindent 8 | trim }}
      volumes:
        - name: api-key
          secret:
            secretName: {{ template "container.security.fullname" . }}-auth
        - name: rbac-proxy-certs
          secret:
            secretName: {{ template "kubeRbacProxy.fullname" . }}-tls-certificate
        {{- include "proxy.selfSignedCertificates.volumes" . | nindent 8 }}
      terminationGracePeriodSeconds: 10
{{- if or .Values.nodeSelector.defaults .Values.nodeSelector.usage }}
      nodeSelector:
{{ toYaml (default .Values.nodeSelector.defaults .Values.nodeSelector.usage) | indent 8 }}
{{- end }}
{{- if or .Values.tolerations.defaults .Values.tolerations.usage }}
      tolerations:
{{ toYaml (default .Values.tolerations.defaults .Values.tolerations.usage) | indent 8 }}
{{- end }}
{{- if or .Values.affinity.defaults .Values.affinity.usage }}
      affinity:
{{ toYaml (default .Values.affinity.defaults .Values.affinity.usage) | indent 8 }}
{{- end }}
{{- $classname := (default (default "" .Values.priorityClassName.default ) .Values.priorityClassName.usage) }}
{{- if not (eq "" $classname) }}
      priorityClassName: "{{ $classname }}"
{{- end }}
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  labels:
    {{- include "usage.labels" . | nindent 4 }}
  name: trendmicro-usage-controller-metrics-service
  namespace: {{ .Release.Namespace }}
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    {{- include "usage.selectorLabels" . | nindent 4 }}

{{ if .Values.networkPolicy.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: usage-controller-networkpolicy
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "usage.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      {{- include "usage.selectorLabels" . | nindent 6 }}
  policyTypes:
    - Ingress
  ingress:
    - from: # any -- this is for metrics
      ports:
        - protocol: TCP
          port: 8443
    - from: # any -- this should just be kubelet for health probes
      ports:
        - protocol: TCP
          port: 8081
{{- end }}

{{ if .Values.serviceAccount.create }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "usage.serviceAccountName" . }}
  labels:
    {{- include "usage.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.usage.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
{{- end }}
