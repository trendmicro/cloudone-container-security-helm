{{- if or (eq true .Values.cloudOne.vulnerabilityScanning.enabled) (eq true .Values.cloudOne.inventoryCollection.enabled) }}
{{ if .Values.serviceAccount.create }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "workloadOperator.serviceAccountName" . }}
  labels:
    {{- include "workloadOperator.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.workloadOperator.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
{{- end }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trendmicro-workload-operator
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "workloadOperator.labels" . | nindent 4 }}
spec:
  replicas: {{ default 1 .Values.replicas.workloadOperator }}
  selector:
    matchLabels:
      {{- include "workloadOperator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/auth: {{ include "container.security.auth.secret" . | sha256sum }}
{{- with (default .Values.podAnnotations.defaults .Values.podAnnotations.workloadOperator) }}
{{- toYaml . | nindent 8 }}
{{- end }}
      labels:
        {{- include "workloadOperator.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "workloadOperator.serviceAccountName" . }}
{{- $securityContextEnabled := .Values.securityContext.enabled }}
{{- $securityContext := default .Values.securityContext.default .Values.securityContext.workloadOperator }}
{{- $podSecurityContext := default .Values.securityContext.default.pod $securityContext.pod }}
{{- $containerSecurityContext := default .Values.securityContext.default.container $securityContext.container.workloadOperator }}
{{- if $securityContextEnabled }}
      securityContext:
{{ toYaml $podSecurityContext | indent 8 }}
{{- end }}
      {{- $imageDefaults := .Values.images.defaults }}
      {{- with .Values.images.workloadOperator }}
      {{- $secret := (default (default "" $imageDefaults.imagePullSecret) .imagePullSecret) }}
      {{- if not (eq "" $secret) }}
      imagePullSecrets:
        - name: {{ $secret | quote }}
      {{- end }}
      containers:
      - name: trendmicro-workload-operator
{{- if $securityContextEnabled }}
        securityContext:
{{ toYaml $containerSecurityContext | indent 12 }}
{{- end }}
        {{- $project := (default (default "trendmicrocloudone" $imageDefaults.project) .project) }}
        {{- $repository := printf "%s/%s" $project (required ".repository is required!" .repository) }}
        {{- $tag := (default $imageDefaults.tag .tag) }}
        image: {{ include "image.source" (dict "repository" $repository "registry" .registry "tag" $tag "imageDefaults" $imageDefaults "digest" .digest) }}
        imagePullPolicy: {{ default (default "Always" $imageDefaults.pullPolicy) .pullPolicy }}
        {{- end }}
        args:
        - --zap-devel={{ default "false" .Values.logConfig.devel }}
        - --zap-log-level={{ include "logLevel" (list .Values.cloudOne.workloadOperator.logLevel .) }}
        - --zap-encoder={{ default "json" .Values.logConfig.encoder }}
        - --zap-stacktrace-level={{ default "error" .Values.logConfig.stacktraceLevel }}
        - --zap-time-encoding={{ default "rfc3339" .Values.logConfig.timeEncoding }}
        - --cloud-one-endpoint={{ include "container.security.endpoint" . }}
        - --excluded-namespaces
        {{- $excludeNS := (include "namespaceExclusions" .) }}
        - {{ $excludeNS | quote }}
        - --workload-controller-instance-name={{ .Release.Name }}
        - --rescan-interval
        - 30m
        - --exclude-kubernetes-service-host-from-proxy={{ default "false" .Values.proxy.excludeKubernetesServiceHost }}
        - --vulnerability-scanning={{ default "false" .Values.cloudOne.vulnerabilityScanning.enabled }}
        - --inventory-collection={{ default "false" .Values.cloudOne.inventoryCollection.enabled }}
        - --inventory-collection-period={{ default "5m" .Values.cloudOne.inventoryCollection.period }}
        - --chart-version={{ default "unknown" .Chart.AppVersion }}
        - --runtime-security={{ default "false" .Values.cloudOne.runtimeSecurity.enabled }}
        - --malware-scanning={{ default "false" .Values.cloudOne.malwareScanning.enabled }}
        - --secret-scanning={{ default "false" .Values.cloudOne.secretScanning.enabled }}
        - --trusted-images={{ include "digest" . }}
        {{- if gt (int .Values.replicas.workloadOperator) 1 }}
        - --leader-elect
        {{- end }}
        command:
        - /app/workload-operator
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CREATION_TIMESTAMP
          value: "{{ now.Unix }}"
        {{- include "container.security.proxy.env" . | nindent 8 }}
        volumeMounts:
          - mountPath: /secrets
            name: api-key
          {{- include "proxy.selfSignedCertificates.volumeMounts" . | nindent 10 }}
        resources:
{{ toYaml (default .Values.resources.defaults .Values.resources.workloadOperator) | indent 12 }}
      volumes:
        - name: api-key
          secret:
            secretName: {{ template "container.security.fullname" . }}-auth
        {{- include "proxy.selfSignedCertificates.volumes" . | nindent 8 }}
      terminationGracePeriodSeconds: 10
{{- if or .Values.nodeSelector.defaults .Values.nodeSelector.workloadOperator }}
      nodeSelector:
{{ toYaml (default .Values.nodeSelector.defaults .Values.nodeSelector.workloadOperator) | indent 8 }}
{{- end }}
{{- if or .Values.tolerations.defaults .Values.tolerations.workloadOperator }}
      tolerations:
{{ toYaml (default .Values.tolerations.defaults .Values.tolerations.workloadOperator) | indent 8 }}
{{- end }}
{{- if or .Values.affinity.defaults .Values.affinity.workloadOperator }}
      affinity:
{{ toYaml (default .Values.affinity.defaults .Values.affinity.workloadOperator) | indent 8 }}
{{- end }}
{{- $classname := (default (default "" .Values.priorityClassName.default ) .Values.priorityClassName.workloadOperator) }}
{{- if not (eq "" $classname) }}
      priorityClassName: "{{ $classname }}"
{{- end }}
      restartPolicy: Always
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: workload-images-remover-service-account
  labels:
    {{- include "workloadOperator.labels" . | nindent 4 }}
  annotations:
    helm.sh/hook: post-delete
    helm.sh/hook-delete-policy: hook-succeeded,hook-failed,before-hook-creation
    helm.sh/hook-weight: "-10"
---
apiVersion: batch/v1
kind: Job
metadata:
  name: trendmicro-workload-images-remover
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "workloadOperator.labels" . | nindent 4 }}
  annotations:
    helm.sh/hook: post-delete
    helm.sh/hook-delete-policy: hook-succeeded,hook-failed
spec:
  backoffLimit: 2
  activeDeadlineSeconds: 90
  ttlSecondsAfterFinished: 60
  template:
    metadata:
      annotations:
{{- with (default .Values.podAnnotations.defaults .Values.podAnnotations.workloadOperator) }}
{{- toYaml . | nindent 8 }}
{{- end }}
      labels:
        {{- include "workloadOperator.labels" . | nindent 8 }}
    spec:
      serviceAccountName: workload-images-remover-service-account
{{- $securityContextEnabled := .Values.securityContext.enabled }}
{{- $securityContext := default .Values.securityContext.default .Values.securityContext.workloadOperator }}
{{- $podSecurityContext := default .Values.securityContext.default.pod $securityContext.pod }}
{{- $containerSecurityContext := default .Values.securityContext.default.container $securityContext.container.workloadOperator }}
{{- if $securityContextEnabled }}
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
{{- end }}
      {{- $imageDefaults := .Values.images.defaults }}
      {{- with .Values.images.workloadOperator }}
      {{- $secret := (default (default "" $imageDefaults.imagePullSecret) .imagePullSecret) }}
      {{- if not (eq "" $secret) }}
      imagePullSecrets:
        - name: {{ $secret | quote }}
      {{- end }}
      restartPolicy: Never
      containers:
        - name: trendmicro-workload-images-remover
{{- if $securityContextEnabled }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
{{- end }}
        {{- $project := (default (default "trendmicrocloudone" $imageDefaults.project) .project) }}
        {{- $repository := printf "%s/%s" $project (required ".repository is required!" .repository) }}
        {{- $tag := (default $imageDefaults.tag .tag) }}
          image: {{ include "image.source" (dict "repository" $repository "registry" .registry "tag" $tag "imageDefaults" $imageDefaults "digest" .digest) }}
          imagePullPolicy: {{ default (default "Always" $imageDefaults.pullPolicy) .pullPolicy }}
        {{- end }}
          command:
          - /app/workload-operator
          args:
          - --cleanup-mode
{{- if or .Values.nodeSelector.defaults .Values.nodeSelector.workloadOperator }}
      nodeSelector:
{{ toYaml (default .Values.nodeSelector.defaults .Values.nodeSelector.workloadOperator) | indent 8 }}
{{- end }}
{{- if or .Values.tolerations.defaults .Values.tolerations.workloadOperator }}
      tolerations:
{{ toYaml (default .Values.tolerations.defaults .Values.tolerations.workloadOperator) | indent 8 }}
{{- end }}
{{- if or .Values.affinity.defaults .Values.affinity.workloadOperator }}
      affinity:
{{ toYaml (default .Values.affinity.defaults .Values.affinity.workloadOperator) | indent 8 }}
{{- end }}
{{- $classname := (default (default "" .Values.priorityClassName.default ) .Values.priorityClassName.workloadOperator) }}
{{- if not (eq "" $classname) }}
      priorityClassName: "{{ $classname }}"
{{- end }}
{{- end }}
